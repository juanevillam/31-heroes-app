{"version":3,"sources":["auth/AuthContext.js","routers/PrivateRoute.js","routers/PublicRoute.js","types/types.js","components/login/LoginScreen.js","components/ui/Navbar.js","components/heroes/HeroCard.js","data/heroes.js","components/heroes/HeroList.js","selectors/getHeroesByPublisher.js","components/marvel/MarvelScreen.js","components/heroes/HeroScreen.js","selectors/getHeroById.js","components/dc/DcScreen.js","components/search/SearchScreen.js","hooks/useForm.js","selectors/getHeroesByName.js","routers/DashboardRoutes.js","routers/AppRouter.js","auth/authReducer.js","components/ui/Footer.js","HeroesApp.js","index.js"],"names":["AuthContext","createContext","PrivateRoute","isAuthenticated","Component","component","rest","localStorage","setItem","location","pathname","props","to","PublicRoute","types","LoginScreen","history","dispatch","useContext","className","onClick","lastPath","getItem","type","payload","name","replace","Navbar","user","useHistory","id","activeClassName","exact","data-toggle","data-target","aria-controls","aria-expanded","aria-label","HeroCard","superhero","alter_ego","first_appearance","characters","style","maxWidth","src","alt","heroes","HeroList","publisher","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","key","MarvelScreen","HeroScreen","heroeId","useParams","find","length","push","goBack","DcScreen","SearchScreen","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","reset","handleInputChange","target","value","useForm","searchText","formValues","heroesFiltered","toLocaleLowerCase","getHeroesByName","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","DashboardRoutes","path","AppRouter","logged","authReducer","state","action","Footer","year","Date","getFullYear","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c2bbb657.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext();","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PrivateRoute = ( { isAuthenticated, component: Component, ...rest } ) => {\n    \n    localStorage.setItem('lastPath', rest.location.pathname);\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    );\n\n};\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PublicRoute = ( { isAuthenticated, component: Component, ...rest } ) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( !isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/\" /> )\n            )}\n        \n        />\n    );\n\n};\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n};","export const types = {\n    login: '[auth] login',\n    logout: '[auth] logout',\n};","import React, { useContext } from 'react';\nimport { types } from '../../types/types';\nimport { AuthContext } from '../../auth/AuthContext';\n\nexport const LoginScreen = ( { history } ) => {\n\n    const { dispatch } = useContext( AuthContext );\n\n    const handleLogin = () => {\n\n        const lastPath = localStorage.getItem('lastPath') || '/';\n\n        dispatch({\n            type: types.login,\n            payload: {\n                name: 'Juan Villa'\n            }\n        });\n\n        history.replace( lastPath );\n        \n    };\n\n    return (\n        <div className=\"container mt-5\">\n            <h1>Login, Welcome to the HeroesApp</h1>\n            <hr />\n\n            <button\n                className=\"btn btn-info\"\n                onClick={ handleLogin }\n            >\n                Login\n            </button>\n\n        </div>\n    );\n\n};\n","import React, { useContext } from 'react';\nimport { Link, NavLink, useHistory } from 'react-router-dom';\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\n\nexport const Navbar = () => {\n\n    const { user: { name }, dispatch } = useContext( AuthContext );\n    const history = useHistory();\n\n    const handleLogout = () => {\n\n        history.replace('/login');\n\n        dispatch({\n            type: types.logout\n        });\n\n    };\n\n    return (\n        <div className=\"fixed-top\">\n            <div className=\"collapse\" id=\"navbarToggleExternalContent\">\n            <div className=\"bg-dark p-4\">\n            <Link className=\"navbar-brand text-white\" to=\"/\">HeroesApp</Link>\n            <div className=\"navbar-collapse\">\n                <div className=\"navbar-nav\">\n                    <NavLink activeClassName=\"active\" className=\"nav-item nav-link text-white\" exact to=\"/marvel\">Marvel</NavLink>\n                    <NavLink activeClassName=\"active\" className=\"nav-item nav-link text-white\" exact to=\"/dc\">DC</NavLink>\n                    <NavLink activeClassName=\"active\" className=\"nav-item nav-link text-white\" exact to=\"/search\">Search</NavLink>\n                </div>\n            </div>\n            <div className=\"navbar-collapse\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <span className=\"nav-item nav-link text-info\"> { name }</span>\n                    <button className=\"nav-item nav-link btn btn-info\" onClick={ handleLogout }>Logout</button>\n                </ul>\n            </div>\n            </div>\n            </div>\n            <nav className=\"navbar navbar-dark bg-dark\">\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarToggleExternalContent\" aria-controls=\"navbarToggleExternalContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n            </nav>\n        </div>\n    );\n\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const HeroCard = ( { id, superhero, alter_ego, first_appearance, characters, } ) => {\n\n    return (\n        <div className=\"card ms-3 animate__animated animate__fadeIn\" style={ { maxWidth: 540 } }>\n            <div className=\"row no-gutters\">\n                <div className=\"col-md-4\">\n                    <img src={ `./assets/heroes/${ id }.jpg` } className=\"card-img\" alt={ superhero } />\n                </div>\n                <div className=\"col-md-8\">\n                    \n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\"> { superhero } </h5>\n                        <p className=\"card-text\"> { alter_ego} </p>\n\n                        {\n                            ( alter_ego !== characters ) \n                                && <p className=\"card-text\"> { characters } </p>\n                        }\n\n                        <p className=\"card-text\">\n                            <small className=\"text-muted\"> { first_appearance } </small>\n                        </p>\n\n                        <Link to={ `./hero/${ id }` } className=\"btn btn-info btn-block\">\n                            More...\n                        </Link>\n\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    );\n\n};","export const heroes = [\n    {\n        'id': 'dc-batman',\n        'superhero': 'Batman', \n        'publisher': 'DC Comics', \n        'alter_ego': 'Bruce Wayne',\n        'first_appearance': 'Detective Comics #27',\n        'characters': 'Bruce Wayne'\n    },\n    {\n        'id': 'dc-superman',\n        'superhero': 'Superman', \n        'publisher': 'DC Comics', \n        'alter_ego': 'Kal-El',\n        'first_appearance': 'Action Comics #1',\n        'characters': 'Kal-El'\n    },\n    {\n        'id': 'dc-flash',\n        'superhero': 'Flash', \n        'publisher': 'DC Comics', \n        'alter_ego': 'Jay Garrick',\n        'first_appearance': 'Flash Comics #1',\n        'characters': 'Jay Garrick, Barry Allen, Wally West, Bart Allen'\n    },\n    {\n        'id': 'dc-green',\n        'superhero': 'Green Lantern', \n        'publisher': 'DC Comics', \n        'alter_ego': 'Alan Scott',\n        'first_appearance': 'All-American Comics #16',\n        'characters': 'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\n    },\n    {\n        'id': 'dc-arrow',\n        'superhero': 'Green Arrow', \n        'publisher': 'DC Comics', \n        'alter_ego': 'Oliver Queen',\n        'first_appearance': 'More Fun Comics #73',\n        'characters': 'Oliver Queen'\n    },\n    {\n        'id': 'dc-wonder',\n        'superhero': 'Wonder Woman', \n        'publisher': 'DC Comics', \n        'alter_ego': 'Princess Diana',\n        'first_appearance': 'All Star Comics #8',\n        'characters': 'Princess Diana'\n    },\n    {\n        'id': 'dc-martian',\n        'superhero': 'Martian Manhunter', \n        'publisher': 'DC Comics', \n        'alter_ego': 'J\\'onn J\\'onzz',\n        'first_appearance': 'Detective Comics #225',\n        'characters': 'Martian Manhunter'\n    },\n    {\n        'id': 'dc-robin',\n        'superhero': 'Robin/Nightwing', \n        'publisher': 'DC Comics', \n        'alter_ego': 'Dick Grayson',\n        'first_appearance': 'Detective Comics #38',\n        'characters': 'Dick Grayson'\n    },\n    {\n        'id': 'dc-blue',\n        'superhero': 'Blue Beetle', \n        'publisher': 'DC Comics', \n        'alter_ego': 'Dan Garret',\n        'first_appearance': 'Mystery Men Comics #1',\n        'characters': 'Dan Garret, Ted Kord, Jaime Reyes'\n    },\n    {\n        'id': 'dc-black',\n        'superhero': 'Black Canary', \n        'publisher': 'DC Comics', \n        'alter_ego': 'Dinah Drake',\n        'first_appearance': 'Flash Comics #86',\n        'characters': 'Dinah Drake, Dinah Lance'\n    },\n    {\n        'id': 'marvel-spider',\n        'superhero': 'Spider Man', \n        'publisher': 'Marvel Comics', \n        'alter_ego': 'Peter Parker',\n        'first_appearance': 'Amazing Fantasy #15',\n        'characters': 'Peter Parker'\n    },\n    {\n        'id': 'marvel-captain',\n        'superhero': 'Captain America', \n        'publisher': 'Marvel Comics', \n        'alter_ego': 'Steve Rogers',\n        'first_appearance': 'Captain America Comics #1',\n        'characters': 'Steve Rogers'\n    },\n    {\n        'id': 'marvel-iron',\n        'superhero': 'Iron Man', \n        'publisher': 'Marvel Comics', \n        'alter_ego': 'Tony Stark',\n        'first_appearance': 'Tales of Suspense #39',\n        'characters': 'Tony Stark'\n    },\n    {\n        'id': 'marvel-thor',\n        'superhero': 'Thor', \n        'publisher': 'Marvel Comics', \n        'alter_ego': 'Thor Odinson',\n        'first_appearance': 'Journey into Myster #83',\n        'characters': 'Thor Odinson'\n    },\n    {\n        'id': 'marvel-hulk',\n        'superhero': 'Hulk', \n        'publisher': 'Marvel Comics', \n        'alter_ego': 'Bruce Banner',\n        'first_appearance': 'The Incredible Hulk #1',\n        'characters': 'Bruce Banner'\n    },\n    {\n        'id': 'marvel-wolverine',\n        'superhero': 'Wolverine', \n        'publisher': 'Marvel Comics', \n        'alter_ego': 'James Howlett',\n        'first_appearance': 'The Incredible Hulk #180',\n        'characters': 'James Howlett'\n    },\n    {\n        'id': 'marvel-daredevil',\n        'superhero': 'Daredevil', \n        'publisher': 'Marvel Comics', \n        'alter_ego': 'Matthew Michael Murdock',\n        'first_appearance': 'Daredevil #1',\n        'characters': 'Matthew Michael Murdock'\n    },\n    {\n        'id': 'marvel-hawkeye',\n        'superhero': 'Hawkeye', \n        'publisher': 'Marvel Comics', \n        'alter_ego': 'Clinton Francis Barton',\n        'first_appearance': 'Tales of Suspense #57',\n        'characters': 'Clinton Francis Barton'\n    },\n    {\n        'id': 'marvel-cyclops',\n        'superhero': 'Cyclops', \n        'publisher': 'Marvel Comics', \n        'alter_ego': 'Scott Summers',\n        'first_appearance': 'X-Men #1',\n        'characters': 'Scott Summers'\n    },\n    {\n        'id': 'marvel-silver',\n        'superhero': 'Silver Surfer', \n        'publisher': 'Marvel Comics', \n        'alter_ego': 'Norrin Radd',\n        'first_appearance': 'The Fantastic Four #48',\n        'characters': 'Norrin Radd'\n    }\n];","import React, { useMemo } from 'react';\nimport { HeroCard } from './HeroCard';\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher';\n\nexport const HeroList = ( { publisher } ) => {\n\n    const heroes = useMemo(() => getHeroesByPublisher( publisher ), [ publisher ] );\n\n    return (\n        <div className=\"card-columns animate__animated animate__fadeIn\">\n           {\n               heroes.map( hero => (\n                   <HeroCard \n                        key={ hero.id }\n                        { ...hero }\n                    />\n                   \n               ))\n           } \n        </div>\n    );\n\n};","import { heroes } from '../data/heroes';\n\nexport const getHeroesByPublisher = ( publisher ) => {\n\n    const validPublishers = [ 'DC Comics', 'Marvel Comics' ];\n\n    if ( !validPublishers.includes( publisher ) ) {\n        throw new Error( `Publisher \"${ publisher }\" is not valid.` );\n    }\n\n    return heroes.filter( hero => hero.publisher === publisher );\n\n};","import React from 'react';\nimport { HeroList } from '../heroes/HeroList';\n\nexport const MarvelScreen = () => {\n\n    return (\n        <div>\n            <h1>Marvel Screen</h1>\n            <hr />\n            <HeroList publisher=\"Marvel Comics\" />\n        </div>\n    );\n\n};\n","import React, { useMemo } from 'react';\nimport { useParams, Redirect } from 'react-router-dom';\nimport { getHeroById } from '../../selectors/getHeroById';\n\nexport const HeroScreen = ( { history } ) => {\n\n    const { heroeId } = useParams();\n\n    const hero = useMemo(() => getHeroById( heroeId ), [ heroeId ]);\n\n    if ( !hero ) {\n        return <Redirect to=\"/\" />;\n    };\n\n    const handleReturn = () => {\n\n        if( history.length <=2 ) {\n            history.push('/');\n        } else {\n            history.goBack();\n        };\n\n    };\n\n    const { superhero, publisher, alter_ego, first_appearance, characters } = hero;\n    \n    return (\n        <div className=\"row mt-5\">\n            <div className=\"col-4\">\n                <img \n                    src={ `../assets/heroes/${ heroeId }.jpg` }\n                    alt={ superhero }\n                    className=\"img-thumbnail animate__animated animate__fadeInLeft\"\n                />\n            </div>\n\n            <div className=\"col-8 animate__animated animate__fadeIn\">\n                <h3> { superhero } </h3>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item\"> <b> Alter ego: </b> { alter_ego } </li>\n                    <li className=\"list-group-item\"> <b> Publisher: </b> { publisher } </li>\n                    <li className=\"list-group-item\"> <b> First appearance: </b> { first_appearance } </li>\n                </ul>\n\n                <div className=\"mt-5\">\n                <h5> Characters </h5>\n                <p> { characters } </p>\n                <button className=\"btn btn-info btn-block\" onClick={ handleReturn }>Return</button>\n                </div>\n                \n            </div>\n\n        </div>\n    );\n\n};","import { heroes } from '../data/heroes';\n\nexport const getHeroById = ( id ) => heroes.find( hero => hero.id === id );","import React from 'react';\nimport { HeroList } from '../heroes/HeroList';\n\nexport const DcScreen = () => {\n\n    return (\n        <div>\n            <h1>DC Screen</h1>\n            <hr />\n\n            <HeroList publisher=\"DC Comics\" />\n\n        </div>\n    );\n\n};\n","import React, { useMemo } from 'react';\nimport queryString from 'query-string';\nimport { HeroCard } from '../heroes/HeroCard';\nimport { useForm } from '../../hooks/useForm';\nimport { useLocation } from 'react-router-dom';\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\n\nexport const SearchScreen = ( { history } ) => {\n\n    const location = useLocation();\n    const { q = '' } = queryString.parse( location.search );\n\n    const [ formValues, handleInputChange ] = useForm({\n        searchText: q\n    });\n\n    const { searchText } = formValues;\n    \n    const heroesFiltered = useMemo(() => getHeroesByName( q ), [q]);\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        history.push(`?q=${ searchText }`);\n    };\n\n    return (\n        <div>\n            <h1>Search Screen</h1>\n            <hr />\n            \n            <div className=\"row\">\n                \n                <div className=\"col-5\">\n                    <h4> Search Form </h4>\n                    <hr />\n\n                    <form onSubmit={ handleSearch }>\n                        <input \n                            type=\"text\"\n                            placeholder=\"Find your hero\"\n                            className=\"form-control\"\n                            name=\"searchText\"\n                            autoComplete=\"off\"\n                            value={ searchText }\n                            onChange={ handleInputChange }\n                        />\n\n                        <button\n                            type=\"submit\"\n                            className=\"mt-2 btn btn-info btn-block\"\n                        >\n                            Search...\n                        </button>\n                    </form>\n\n\n                </div>\n\n\n                <div className=\"col-7\">\n\n                    <h4> Results </h4>\n                    <hr />\n\n                    { \n                        (q ==='') \n                            && \n                            <div className=\"alert alert-info\">\n                                Search a hero\n                            </div>\n                    }\n\n                    { \n                        (q !=='' && heroesFiltered.length === 0 ) \n                            && \n                            <div className=\"alert alert-danger\">\n                                There is no a hero with { q }\n                            </div>\n                    }\n\n                    {\n                        heroesFiltered.map( hero => (\n                            <HeroCard \n                                key={ hero.id }\n                                { ...hero }\n                            />\n                        ))\n                    }\n\n                </div>\n\n            </div>\n\n        </div>\n    )\n\n};\n","import { useState } from 'react';\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [ values, setValues ] = useState( initialState );\n\n    const reset = () => {\n        setValues( initialState );\n    };\n\n    const handleInputChange = ( { target } ) => {\n\n        setValues( {\n            ...values,\n            [ target.name ]: target.value\n        } );\n\n    };\n\n    return [ values, handleInputChange, reset ];\n\n};","import { heroes } from '../data/heroes';\n\n\nexport const getHeroesByName = ( name = '' ) => {\n\n    if ( name === '' ) {\n        return [];\n    };\n\n    name = name.toLocaleLowerCase();\n\n    return heroes.filter( hero => hero.superhero.toLocaleLowerCase().includes( name )  );\n\n};","import React from 'react';\nimport { Navbar } from '../components/ui/Navbar';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { MarvelScreen } from '../components/marvel/MarvelScreen';\nimport { HeroScreen } from '../components/heroes/HeroScreen';\nimport { DcScreen } from '../components/dc/DcScreen';\nimport { SearchScreen } from '../components/search/SearchScreen';\n\nexport const DashboardRoutes = () => {\n\n    return (\n        <>\n            <Navbar />\n\n            <div className=\"container mt-2\">\n                <Switch>\n                    <Route exact path=\"/marvel\" component={ MarvelScreen } />\n                    <Route exact path=\"/hero/:heroeId\" component={ HeroScreen } />\n                    <Route exact path=\"/dc\" component={ DcScreen } />\n                    <Route exact path=\"/search\" component={ SearchScreen } />\n\n                    <Redirect to=\"/marvel\" />\n                </Switch>\n            </div>\n        </>\n    );\n\n};","import React, { useContext } from 'react'\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\n\nimport { AuthContext } from '../auth/AuthContext';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nimport { LoginScreen } from '../components/login/LoginScreen';\nimport { DashboardRoutes } from './DashboardRoutes';\n\n\nexport const AppRouter = () => {\n\n    const { user } = useContext( AuthContext );\n\n    return (\n        <Router>\n            <div>\n                <Switch> \n                    <PublicRoute \n                        exact \n                        path=\"/login\" \n                        component={ LoginScreen } \n                        isAuthenticated={ user.logged }\n                    />\n                    \n                    <PrivateRoute \n                        path=\"/\" \n                        component={ DashboardRoutes } \n                        isAuthenticated={ user.logged }\n                    />\n                </Switch>\n            </div>\n        </Router>\n    );\n\n};","import { types } from '../types/types';\n\nexport const authReducer = ( state = {}, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.login:\n            return {\n                ...action.payload,\n                logged: true\n            };\n\n        case types.logout:\n            return {\n                logged: false\n            };\n    \n        default:\n            return state;\n            \n    };\n\n};","import React from 'react'\r\n\r\nexport const Footer = () => {\r\n\r\n    const year = new Date().getFullYear();\r\n\r\n    return (\r\n        <div>\r\n            <footer className=\"footer\">\r\n                <div>\r\n                <p className=\"text-center mt-2\">&copy; Juan Villa - { year } &copy;</p>\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useReducer, useEffect } from 'react'\nimport { AppRouter } from './routers/AppRouter'\nimport { AuthContext } from './auth/AuthContext'\nimport { authReducer } from './auth/authReducer'\nimport { Footer } from './components/ui/Footer';\n\nconst init = () => JSON.parse( localStorage.getItem( 'user' ) ) || { logged: false };\n\nexport const HeroesApp = () => {\n    \n    const [ user, dispatch ] = useReducer( authReducer, {}, init );\n\n    useEffect( () => {\n        localStorage.setItem( 'user', JSON.stringify( user ) );\n    }, [ user ] );\n\n    return (\n        <AuthContext.Provider value= { { user, dispatch } } >\n            <AppRouter />\n            <Footer />\n        </AuthContext.Provider>\n    );\n\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HeroesApp } from './HeroesApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <HeroesApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}